class Alien{
    field int x,y;
    field boolean status;

    constructor Alien new(int Ax,int Ay){
        let x = Ax;
        let y = Ay;
        let status = true;
        return this;
    }

    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }
    method void draw(){
        do Sprites.drawAlien(x,y,false);
        return;
    }

    //Draw and modify position according its direction during this instance
    method boolean checkMove(boolean directionsMatch){
        if(directionsMatch & status){
            if (x > 339){
                do Game.setDirection(-1);
                return false; //Should go to update Y
            }
            if (x < 170){
                do Game.setDirection(1);
                return false; //Should go to update Y
            }
        }        
        return true;
    }

    method void updateX(){
        if(status){
            do Sprites.drawAlien(x,y,true);
            let x = Game.getDirection()*10+x;
            do Sprites.drawAlien(x,y,false); //Re-draw side current position
        }        
        return;
    }

    method void updateY(){
        if(status){
            do Sprites.drawAlien(x,y,true);
            let y = y + 10;
            do Sprites.drawAlien(x,y,false);
        }       
        return;
    }

    method void kill(){
        do Sprites.drawAlien(x,y,true);
        let status = false;
        return;
    }

    method int getX(){
        return x;
    }

    method int getY(){
        return y;
    }

    method boolean getStatus(){
        return status;
    }
}