class Game {
    field Ship ship;
    field Bullet bullet;
    field Alien alien1, alien2, alien3, alien4, alien5, alien6;
    static int direction, directionAux;

    //Game constructor
    constructor Game new(){
        do Screen.drawRectangle(0,0,511,255);
        //Create objects
        let ship = Ship.new();
        let bullet = Bullet.new(ship.getX(), ship.getY()-5);
        let direction = 1;
        let directionAux = 1;

        let alien1 = Alien.new(230, 60);
        let alien2 = Alien.new(250, 60);
        let alien3 = Alien.new(270, 60);
        let alien4 = Alien.new(230, 70);
        let alien5 = Alien.new(250, 70);
        let alien6 = Alien.new(270, 70);

        //Setup objects in screen
        do ship.draw();
        do alien1.draw();
        do alien2.draw();
        do alien3.draw();
        do alien4.draw();
        do alien5.draw();
        do alien6.draw();
        do Sys.wait(1000);
        return this;
    }

    //Handle input to interact with the game
    method void play(){ 
        var boolean gameActive, msg;
        var int ch, debounceTime, debounceAlienTime, time, alienTime;

        let gameActive = true;
        let msg = true;
        let debounceTime = 200;
        let debounceAlienTime = 3000;

        while(gameActive){ 
            let time = time + 1;
            if (time = debounceTime){
                let ch = Keyboard.keyPressed();
                if (ch = 130){  //Left arrow
                    do ship.moveLeft();
                }
                if (ch = 132){  //Right arrow
                    do ship.moveRight();
                }
                if (ch = 32){   //Space
                    if(bullet.getStatus() = false){
                        do bullet.setX(ship.getX()+5); 
                        do bullet.setStatus(); 
                    }
                }
                if (bullet.getStatus() = true){
                    do bullet.update();
                }
                let time = 0;                
            }
            let alienTime = alienTime + 1;
            if (alienTime = debounceAlienTime){
                do updateAliens();
                let alienTime = 0;
            }
            
            //Delete test
            if (ch = 140){
                do Screen.clearScreen();
                let msg = false;
                let gameActive = false;
            }
            if (ch = 131){
                let gameActive = false;
            }        
        }
        do gameOver(msg);
        return;
    }

    //Ends the game by deallocating its reference in memory
    method void gameOver(boolean msg){
        var int ch;
        if (msg){
            do Output.moveCursor(11, 28);
            do Output.printString("Game over");
            while (msg){
                let ch = Keyboard.keyPressed();
                if (ch = 140){
                    let msg = false;
                }
            }
        }        
        do ship.dispose();
        do Memory.deAlloc(this);
        return;
    }
    
    method void updateAliens(){
        var boolean moveInX, directionsMatch;
        let directionsMatch = (direction = directionAux);
        let moveInX = true & alien1.checkMove(directionsMatch);
        let moveInX = moveInX & alien2.checkMove(directionsMatch);
        let moveInX = moveInX & alien3.checkMove(directionsMatch);
        let moveInX = moveInX & alien4.checkMove(directionsMatch);
        let moveInX = moveInX & alien5.checkMove(directionsMatch);
        let moveInX = moveInX & alien6.checkMove(directionsMatch);
        if (moveInX){
            do alien1.updateX();
            do alien2.updateX();
            do alien3.updateX();
            do alien4.updateX();
            do alien5.updateX();
            do alien6.updateX();
            let directionAux = direction;
        }else{
            do alien1.updateY();
            do alien2.updateY();
            do alien3.updateY();
            do alien4.updateY();
            do alien5.updateY();
            do alien6.updateY();            
        }
        return;
    }
    
    function int getDirection(){
        return direction;
    }

    function int getDirectionAux(){
        return directionAux;
    }

    function void setDirection(int newDirection){
        let direction = newDirection;
        return;
    }

    function void setDirectionAux(int newDirection){
        let directionAux = newDirection;
        return;
    }
}